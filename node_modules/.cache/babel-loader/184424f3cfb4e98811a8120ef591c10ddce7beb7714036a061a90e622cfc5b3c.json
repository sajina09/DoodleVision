{"ast":null,"code":"var _jsxFileName = \"/Users/sajina/Desktop/code/Doodle/client/src/components/GeneratedSketchAnimation.js\",\n  _s = $RefreshSig$();\n// src/components/GeneratedSketchAnimation.js\n\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneratedSketchAnimation = ({\n  decodedImageArray\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (!decodedImageArray) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = 280;\n    canvas.height = 280;\n    const scale = 10; // 28 * 10 = 280\n\n    // Flatten visible pixels\n    let pixels = [];\n    for (let y = 0; y < 28; y++) {\n      for (let x = 0; x < 28; x++) {\n        const pixelValue = decodedImageArray[y][x];\n        if (pixelValue > 0.4) {\n          // Only keep pixels above a threshold\n          pixels.push({\n            x,\n            y\n          });\n        }\n      }\n    }\n\n    // Shuffle the pixels randomly for drawing animation\n    pixels = pixels.sort(() => Math.random() - 0.5);\n    let pixelIndex = 0;\n    const totalPixels = pixels.length;\n    function drawNextPixels() {\n      const pixelsPerFrame = 5; // Draw 5 pixels each frame\n\n      for (let i = 0; i < pixelsPerFrame; i++) {\n        if (pixelIndex >= totalPixels) return;\n        const {\n          x,\n          y\n        } = pixels[pixelIndex];\n        ctx.fillStyle = \"white\"; // Always white sketch\n        ctx.fillRect(x * scale, y * scale, scale, scale);\n        pixelIndex++;\n      }\n      if (pixelIndex < totalPixels) {\n        requestAnimationFrame(drawNextPixels);\n      }\n    }\n\n    // Clear background black\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Start drawing\n    drawNextPixels();\n  }, [decodedImageArray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Generated Sketch (Animated)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        border: \"2px solid gray\",\n        borderRadius: \"8px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneratedSketchAnimation, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = GeneratedSketchAnimation;\nexport default GeneratedSketchAnimation;\nvar _c;\n$RefreshReg$(_c, \"GeneratedSketchAnimation\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","GeneratedSketchAnimation","decodedImageArray","_s","canvasRef","canvas","current","ctx","getContext","width","height","scale","pixels","y","x","pixelValue","push","sort","Math","random","pixelIndex","totalPixels","length","drawNextPixels","pixelsPerFrame","i","fillStyle","fillRect","requestAnimationFrame","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","borderRadius","_c","$RefreshReg$"],"sources":["/Users/sajina/Desktop/code/Doodle/client/src/components/GeneratedSketchAnimation.js"],"sourcesContent":["// src/components/GeneratedSketchAnimation.js\n\nimport React, { useEffect, useRef } from \"react\";\n\nconst GeneratedSketchAnimation = ({ decodedImageArray }) => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    if (!decodedImageArray) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = 280;\n    canvas.height = 280;\n    const scale = 10; // 28 * 10 = 280\n\n    // Flatten visible pixels\n    let pixels = [];\n    for (let y = 0; y < 28; y++) {\n      for (let x = 0; x < 28; x++) {\n        const pixelValue = decodedImageArray[y][x];\n        if (pixelValue > 0.4) {\n          // Only keep pixels above a threshold\n          pixels.push({ x, y });\n        }\n      }\n    }\n\n    // Shuffle the pixels randomly for drawing animation\n    pixels = pixels.sort(() => Math.random() - 0.5);\n\n    let pixelIndex = 0;\n    const totalPixels = pixels.length;\n\n    function drawNextPixels() {\n      const pixelsPerFrame = 5; // Draw 5 pixels each frame\n\n      for (let i = 0; i < pixelsPerFrame; i++) {\n        if (pixelIndex >= totalPixels) return;\n\n        const { x, y } = pixels[pixelIndex];\n\n        ctx.fillStyle = \"white\"; // Always white sketch\n        ctx.fillRect(x * scale, y * scale, scale, scale);\n\n        pixelIndex++;\n      }\n\n      if (pixelIndex < totalPixels) {\n        requestAnimationFrame(drawNextPixels);\n      }\n    }\n\n    // Clear background black\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Start drawing\n    drawNextPixels();\n  }, [decodedImageArray]);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n      <h3>Generated Sketch (Animated)</h3>\n      <canvas\n        ref={canvasRef}\n        style={{ border: \"2px solid gray\", borderRadius: \"8px\" }}\n      ></canvas>\n    </div>\n  );\n};\n\nexport default GeneratedSketchAnimation;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,wBAAwB,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACK,iBAAiB,EAAE;IAExB,MAAMG,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IAEnCH,MAAM,CAACI,KAAK,GAAG,GAAG;IAClBJ,MAAM,CAACK,MAAM,GAAG,GAAG;IACnB,MAAMC,KAAK,GAAG,EAAE,CAAC,CAAC;;IAElB;IACA,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3B,MAAMC,UAAU,GAAGb,iBAAiB,CAACW,CAAC,CAAC,CAACC,CAAC,CAAC;QAC1C,IAAIC,UAAU,GAAG,GAAG,EAAE;UACpB;UACAH,MAAM,CAACI,IAAI,CAAC;YAAEF,CAAC;YAAED;UAAE,CAAC,CAAC;QACvB;MACF;IACF;;IAEA;IACAD,MAAM,GAAGA,MAAM,CAACK,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IAE/C,IAAIC,UAAU,GAAG,CAAC;IAClB,MAAMC,WAAW,GAAGT,MAAM,CAACU,MAAM;IAEjC,SAASC,cAAcA,CAAA,EAAG;MACxB,MAAMC,cAAc,GAAG,CAAC,CAAC,CAAC;;MAE1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,cAAc,EAAEC,CAAC,EAAE,EAAE;QACvC,IAAIL,UAAU,IAAIC,WAAW,EAAE;QAE/B,MAAM;UAAEP,CAAC;UAAED;QAAE,CAAC,GAAGD,MAAM,CAACQ,UAAU,CAAC;QAEnCb,GAAG,CAACmB,SAAS,GAAG,OAAO,CAAC,CAAC;QACzBnB,GAAG,CAACoB,QAAQ,CAACb,CAAC,GAAGH,KAAK,EAAEE,CAAC,GAAGF,KAAK,EAAEA,KAAK,EAAEA,KAAK,CAAC;QAEhDS,UAAU,EAAE;MACd;MAEA,IAAIA,UAAU,GAAGC,WAAW,EAAE;QAC5BO,qBAAqB,CAACL,cAAc,CAAC;MACvC;IACF;;IAEA;IACAhB,GAAG,CAACmB,SAAS,GAAG,OAAO;IACvBnB,GAAG,CAACoB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEtB,MAAM,CAACI,KAAK,EAAEJ,MAAM,CAACK,MAAM,CAAC;;IAE/C;IACAa,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACrB,iBAAiB,CAAC,CAAC;EAEvB,oBACEF,OAAA;IAAK6B,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDhC,OAAA;MAAAgC,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCpC,OAAA;MACEqC,GAAG,EAAEjC,SAAU;MACfyB,KAAK,EAAE;QAAES,MAAM,EAAE,gBAAgB;QAAEC,YAAY,EAAE;MAAM;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACjC,EAAA,CAnEIF,wBAAwB;AAAAuC,EAAA,GAAxBvC,wBAAwB;AAqE9B,eAAeA,wBAAwB;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}