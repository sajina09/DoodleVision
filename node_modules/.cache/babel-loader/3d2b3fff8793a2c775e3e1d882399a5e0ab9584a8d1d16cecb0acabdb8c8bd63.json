{"ast":null,"code":"var _jsxFileName = \"/Users/sajina/Desktop/code/Doodle/client/src/components/PredictionDisplay.js\";\n// src/components/PredictionDisplay.js\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictionDisplay = ({\n  prediction\n}) => {\n  if (!prediction) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Prediction: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), isPredicting && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        opacity: 1,\n        transform: \"translateX(0)\",\n        transition: \"all 0.8s ease\"\n      },\n      children: decodedImageArray ? /*#__PURE__*/_jsxDEV(GeneratedSketchAnimation, {\n        decodedImageArray: decodedImageArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"280px\",\n          height: \"280px\",\n          background: \"#000\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          border: \"2px solid gray\",\n          borderRadius: \"10px\",\n          color: \"white\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        children: \"The model couldn't draw anything! \\uD83D\\uDE22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = PredictionDisplay;\nexport default PredictionDisplay;\nvar _c;\n$RefreshReg$(_c, \"PredictionDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PredictionDisplay","prediction","style","marginTop","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","isPredicting","opacity","transform","transition","decodedImageArray","GeneratedSketchAnimation","width","height","background","display","alignItems","justifyContent","border","borderRadius","color","fontSize","fontWeight","_c","$RefreshReg$"],"sources":["/Users/sajina/Desktop/code/Doodle/client/src/components/PredictionDisplay.js"],"sourcesContent":["// src/components/PredictionDisplay.js\n\nimport React from \"react\";\n\nconst PredictionDisplay = ({ prediction }) => {\n  if (!prediction) return null;\n\n  return (\n    <div style={{ marginTop: \"20px\", textAlign: \"center\" }}>\n      <h2>Prediction: {prediction}</h2>\n      {isPredicting && (\n        <div\n          style={{\n            opacity: 1,\n            transform: \"translateX(0)\",\n            transition: \"all 0.8s ease\",\n          }}\n        >\n          {/* <h2 style={{ marginBottom: \"20px\" }}>\n              Look at what the model can do! âœ¨\n            </h2> */}\n\n          {/* Model Drawing or Message */}\n          {decodedImageArray ? (\n            <GeneratedSketchAnimation decodedImageArray={decodedImageArray} />\n          ) : (\n            <div\n              style={{\n                width: \"280px\",\n                height: \"280px\",\n                background: \"#000\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                border: \"2px solid gray\",\n                borderRadius: \"10px\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\",\n              }}\n            >\n              The model couldn't draw anything! ðŸ˜¢\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PredictionDisplay;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAC5C,IAAI,CAACA,UAAU,EAAE,OAAO,IAAI;EAE5B,oBACEF,OAAA;IAAKG,KAAK,EAAE;MAAEC,SAAS,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACrDN,OAAA;MAAAM,QAAA,GAAI,cAAY,EAACJ,UAAU;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAChCC,YAAY,iBACXX,OAAA;MACEG,KAAK,EAAE;QACLS,OAAO,EAAE,CAAC;QACVC,SAAS,EAAE,eAAe;QAC1BC,UAAU,EAAE;MACd,CAAE;MAAAR,QAAA,EAODS,iBAAiB,gBAChBf,OAAA,CAACgB,wBAAwB;QAACD,iBAAiB,EAAEA;MAAkB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAElEV,OAAA;QACEG,KAAK,EAAE;UACLc,KAAK,EAAE,OAAO;UACdC,MAAM,EAAE,OAAO;UACfC,UAAU,EAAE,MAAM;UAClBC,OAAO,EAAE,MAAM;UACfC,UAAU,EAAE,QAAQ;UACpBC,cAAc,EAAE,QAAQ;UACxBC,MAAM,EAAE,gBAAgB;UACxBC,YAAY,EAAE,MAAM;UACpBC,KAAK,EAAE,OAAO;UACdC,QAAQ,EAAE,MAAM;UAChBC,UAAU,EAAE;QACd,CAAE;QAAArB,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACkB,EAAA,GA5CI3B,iBAAiB;AA8CvB,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}