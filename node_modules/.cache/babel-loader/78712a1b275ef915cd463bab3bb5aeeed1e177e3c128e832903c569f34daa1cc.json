{"ast":null,"code":"var _jsxFileName = \"/Users/sajina/Desktop/code/Doodle/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DrawingBoard from \"./components/DrawingBoard\";\nimport PredictionDisplay from \"./components/PredictionDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prediction, setPrediction] = useState(\"\");\n  const handleSubmit = async formData => {\n    try {\n      const response = await fetch(\"http://localhost:8000/predict\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      setPrediction(data.prediction);\n    } catch (error) {\n      console.error(\"Error predicting doodle:\", error);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <div\n    //   style={{\n    //     position: \"relative\",\n    //     minHeight: \"100vh\",\n    //     backgroundColor: \"#0a0a0a\",\n    //     color: \"#fff\",\n    //     padding: \"20px\",\n    //     display: \"flex\",\n    //     flexDirection: \"column\",\n    //     alignItems: \"center\",\n    //     justifyContent: \"center\",\n    //     overflow: \"hidden\",\n    //   }}\n    // >\n    //   {/* Main Content */}\n    // </div>\n    _jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"100%\",\n        maxWidth: \"1400px\",\n        padding: \"20px\",\n        borderRadius: \"20px\",\n        background: \"linear-gradient(135deg, #1a1a1a 0%, #0d0d0d 100%)\",\n        boxShadow: \"0 0 20px rgba(0, 255, 255, 0.2)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontSize: \"1.5rem\",\n          marginBottom: \"20px\",\n          fontWeight: \"bold\",\n          textAlign: \"center\",\n          color: \"#00ffff\"\n        },\n        children: \"\\uD83C\\uDFA8 Sketch Portal \\uD83C\\uDFA8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          gap: \"20px\",\n          flexWrap: \"wrap\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DrawingBoard, {\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"08WraA1brmN2G6EPdBpn5W5zbds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DrawingBoard","PredictionDisplay","jsxDEV","_jsxDEV","App","_s","prediction","setPrediction","handleSubmit","formData","response","fetch","method","body","data","json","error","console","style","position","width","maxWidth","padding","borderRadius","background","boxShadow","children","fontSize","marginBottom","fontWeight","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","justifyContent","gap","flexWrap","onSubmit","_c","$RefreshReg$"],"sources":["/Users/sajina/Desktop/code/Doodle/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport DrawingBoard from \"./components/DrawingBoard\";\nimport PredictionDisplay from \"./components/PredictionDisplay\";\n\nfunction App() {\n  const [prediction, setPrediction] = useState(\"\");\n\n  const handleSubmit = async (formData) => {\n    try {\n      const response = await fetch(\"http://localhost:8000/predict\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      const data = await response.json();\n      setPrediction(data.prediction);\n    } catch (error) {\n      console.error(\"Error predicting doodle:\", error);\n    }\n  };\n\n  return (\n    // <div\n    //   style={{\n    //     position: \"relative\",\n    //     minHeight: \"100vh\",\n    //     backgroundColor: \"#0a0a0a\",\n    //     color: \"#fff\",\n    //     padding: \"20px\",\n    //     display: \"flex\",\n    //     flexDirection: \"column\",\n    //     alignItems: \"center\",\n    //     justifyContent: \"center\",\n    //     overflow: \"hidden\",\n    //   }}\n    // >\n    //   {/* Main Content */}\n\n    // </div>\n    <div\n      style={{\n        position: \"relative\",\n        width: \"100%\",\n        maxWidth: \"1400px\",\n        padding: \"20px\",\n        borderRadius: \"20px\",\n        background: \"linear-gradient(135deg, #1a1a1a 0%, #0d0d0d 100%)\",\n        boxShadow: \"0 0 20px rgba(0, 255, 255, 0.2)\",\n      }}\n    >\n      <h3\n        style={{\n          fontSize: \"1.5rem\",\n          marginBottom: \"20px\",\n          fontWeight: \"bold\",\n          textAlign: \"center\",\n          color: \"#00ffff\",\n        }}\n      >\n        ðŸŽ¨ Sketch Portal ðŸŽ¨\n      </h3>\n\n      {/* Split: User Drawing + Model Output */}\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          gap: \"20px\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {/* User Drawing Left */}\n        {/* <div\n        style={{\n          flex: 1,\n          background: \"#111\",\n          border: \"2px solid #00ffff88\",\n          borderRadius: \"20px\",\n          padding: \"20px\",\n          minHeight: \"80vh\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <DrawingBoard onSubmit={handleSubmit} />\n      </div> */}\n        <DrawingBoard onSubmit={handleSubmit} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,iBAAiB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEJ;MACR,CAAC,CAAC;MAEF,MAAMK,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCR,aAAa,CAACO,IAAI,CAACR,UAAU,CAAC;IAChC,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACAb,OAAA;MACEe,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBC,KAAK,EAAE,MAAM;QACbC,QAAQ,EAAE,QAAQ;QAClBC,OAAO,EAAE,MAAM;QACfC,YAAY,EAAE,MAAM;QACpBC,UAAU,EAAE,mDAAmD;QAC/DC,SAAS,EAAE;MACb,CAAE;MAAAC,QAAA,gBAEFvB,OAAA;QACEe,KAAK,EAAE;UACLS,QAAQ,EAAE,QAAQ;UAClBC,YAAY,EAAE,MAAM;UACpBC,UAAU,EAAE,MAAM;UAClBC,SAAS,EAAE,QAAQ;UACnBC,KAAK,EAAE;QACT,CAAE;QAAAL,QAAA,EACH;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGLhC,OAAA;QACEe,KAAK,EAAE;UACLkB,OAAO,EAAE,MAAM;UACfC,UAAU,EAAE,QAAQ;UACpBC,cAAc,EAAE,eAAe;UAC/BC,GAAG,EAAE,MAAM;UACXC,QAAQ,EAAE;QACZ,CAAE;QAAAd,QAAA,eAmBFvB,OAAA,CAACH,YAAY;UAACyC,QAAQ,EAAEjC;QAAa;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEV;AAAC9B,EAAA,CAzFQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AA2FZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}