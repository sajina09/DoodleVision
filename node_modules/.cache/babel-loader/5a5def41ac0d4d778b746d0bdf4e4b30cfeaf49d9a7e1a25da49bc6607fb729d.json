{"ast":null,"code":"var _jsxFileName = \"/Users/sajina/Desktop/code/Doodle/client/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState } from \"react\";\nimport DrawingBoard from \"./components/DrawingBoard\";\nimport PredictionDisplay from \"./components/PredictionDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prediction, setPrediction] = useState(\"\");\n  const handleSubmit = async formData => {\n    try {\n      const response = await fetch(\"http://localhost:8000/predict\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      setPrediction(data.prediction);\n    } catch (error) {\n      console.error(\"Error predicting doodle:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: \"100vh\",\n      backgroundImage: `url('https://images.unsplash.com/photo-1515021863624-9b325c51faab?w=900&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8Z2FtZSUyMG9mJTIwdGhyb25lc3xlbnwwfHwwfHx8MA%3D%3D')`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      padding: \"30px\",\n      color: \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"20px\",\n        color: \"black\"\n      },\n      children: \"\\uD83D\\uDC09 Doodle Classifier \\uD83C\\uDFF0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DrawingBoard, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PredictionDisplay, {\n      prediction: prediction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"08WraA1brmN2G6EPdBpn5W5zbds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DrawingBoard","PredictionDisplay","jsxDEV","_jsxDEV","App","_s","prediction","setPrediction","handleSubmit","formData","response","fetch","method","body","data","json","error","console","style","minHeight","backgroundImage","backgroundSize","backgroundPosition","padding","color","children","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/sajina/Desktop/code/Doodle/client/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState } from \"react\";\nimport DrawingBoard from \"./components/DrawingBoard\";\nimport PredictionDisplay from \"./components/PredictionDisplay\";\n\nfunction App() {\n  const [prediction, setPrediction] = useState(\"\");\n\n  const handleSubmit = async (formData) => {\n    try {\n      const response = await fetch(\"http://localhost:8000/predict\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      const data = await response.json();\n      setPrediction(data.prediction);\n    } catch (error) {\n      console.error(\"Error predicting doodle:\", error);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        minHeight: \"100vh\",\n        backgroundImage: `url('https://images.unsplash.com/photo-1515021863624-9b325c51faab?w=900&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8Z2FtZSUyMG9mJTIwdGhyb25lc3xlbnwwfHwwfHx8MA%3D%3D')`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        padding: \"30px\",\n        color: \"white\",\n      }}\n    >\n      <h1 style={{ textAlign: \"center\", marginBottom: \"20px\", color: \"black\" }}>\n        üêâ Doodle Classifier üè∞\n      </h1>\n      <DrawingBoard onSubmit={handleSubmit} />\n      <PredictionDisplay prediction={prediction} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,iBAAiB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEJ;MACR,CAAC,CAAC;MAEF,MAAMK,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCR,aAAa,CAACO,IAAI,CAACR,UAAU,CAAC;IAChC,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACEb,OAAA;IACEe,KAAK,EAAE;MACLC,SAAS,EAAE,OAAO;MAClBC,eAAe,EAAE,sMAAsM;MACvNC,cAAc,EAAE,OAAO;MACvBC,kBAAkB,EAAE,QAAQ;MAC5BC,OAAO,EAAE,MAAM;MACfC,KAAK,EAAE;IACT,CAAE;IAAAC,QAAA,gBAEFtB,OAAA;MAAIe,KAAK,EAAE;QAAEQ,SAAS,EAAE,QAAQ;QAAEC,YAAY,EAAE,MAAM;QAAEH,KAAK,EAAE;MAAQ,CAAE;MAAAC,QAAA,EAAC;IAE1E;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL5B,OAAA,CAACH,YAAY;MAACgC,QAAQ,EAAExB;IAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxC5B,OAAA,CAACF,iBAAiB;MAACK,UAAU,EAAEA;IAAW;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAAC1B,EAAA,CAnCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}