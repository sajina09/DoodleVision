{"ast":null,"code":"var _jsxFileName = \"/Users/sajina/Desktop/code/Doodle/client/src/components/GeneratedSketchAnimation.js\",\n  _s = $RefreshSig$();\n// src/components/GeneratedSketchImage.js\n\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneratedSketchImage = ({\n  decodedImageArray\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (!decodedImageArray) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    // Set canvas size to upscale\n    canvas.width = 280;\n    canvas.height = 280;\n\n    // Clear canvas\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    const scale = 10; // 28 * 10 = 280\n\n    for (let y = 0; y < 28; y++) {\n      for (let x = 0; x < 28; x++) {\n        const pixelValue = decodedImageArray[y][x];\n\n        // Set pixel color (threshold to make it black/white clean)\n        ctx.fillStyle = pixelValue > 0.4 ? \"white\" : \"black\";\n        ctx.fillRect(x * scale, y * scale, scale, scale);\n      }\n    }\n  }, [decodedImageArray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Generated Sketch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        border: \"2px solid gray\",\n        borderRadius: \"8px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneratedSketchImage, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = GeneratedSketchImage;\nexport default GeneratedSketchImage;\nvar _c;\n$RefreshReg$(_c, \"GeneratedSketchImage\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","GeneratedSketchImage","decodedImageArray","_s","canvasRef","canvas","current","ctx","getContext","width","height","fillStyle","fillRect","scale","y","x","pixelValue","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","borderRadius","_c","$RefreshReg$"],"sources":["/Users/sajina/Desktop/code/Doodle/client/src/components/GeneratedSketchAnimation.js"],"sourcesContent":["// src/components/GeneratedSketchImage.js\n\nimport React, { useEffect, useRef } from \"react\";\n\nconst GeneratedSketchImage = ({ decodedImageArray }) => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    if (!decodedImageArray) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    // Set canvas size to upscale\n    canvas.width = 280;\n    canvas.height = 280;\n\n    // Clear canvas\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    const scale = 10; // 28 * 10 = 280\n\n    for (let y = 0; y < 28; y++) {\n      for (let x = 0; x < 28; x++) {\n        const pixelValue = decodedImageArray[y][x];\n\n        // Set pixel color (threshold to make it black/white clean)\n        ctx.fillStyle = pixelValue > 0.4 ? \"white\" : \"black\";\n        ctx.fillRect(x * scale, y * scale, scale, scale);\n      }\n    }\n  }, [decodedImageArray]);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n      <h3>Generated Sketch</h3>\n      <canvas\n        ref={canvasRef}\n        style={{ border: \"2px solid gray\", borderRadius: \"8px\" }}\n      ></canvas>\n    </div>\n  );\n};\n\nexport default GeneratedSketchImage;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACK,iBAAiB,EAAE;IAExB,MAAMG,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;;IAEnC;IACAH,MAAM,CAACI,KAAK,GAAG,GAAG;IAClBJ,MAAM,CAACK,MAAM,GAAG,GAAG;;IAEnB;IACAH,GAAG,CAACI,SAAS,GAAG,OAAO;IACvBJ,GAAG,CAACK,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEP,MAAM,CAACI,KAAK,EAAEJ,MAAM,CAACK,MAAM,CAAC;IAE/C,MAAMG,KAAK,GAAG,EAAE,CAAC,CAAC;;IAElB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3B,MAAMC,UAAU,GAAGd,iBAAiB,CAACY,CAAC,CAAC,CAACC,CAAC,CAAC;;QAE1C;QACAR,GAAG,CAACI,SAAS,GAAGK,UAAU,GAAG,GAAG,GAAG,OAAO,GAAG,OAAO;QACpDT,GAAG,CAACK,QAAQ,CAACG,CAAC,GAAGF,KAAK,EAAEC,CAAC,GAAGD,KAAK,EAAEA,KAAK,EAAEA,KAAK,CAAC;MAClD;IACF;EACF,CAAC,EAAE,CAACX,iBAAiB,CAAC,CAAC;EAEvB,oBACEF,OAAA;IAAKiB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDpB,OAAA;MAAAoB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBxB,OAAA;MACEyB,GAAG,EAAErB,SAAU;MACfa,KAAK,EAAE;QAAES,MAAM,EAAE,gBAAgB;QAAEC,YAAY,EAAE;MAAM;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACrB,EAAA,CAvCIF,oBAAoB;AAAA2B,EAAA,GAApB3B,oBAAoB;AAyC1B,eAAeA,oBAAoB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}